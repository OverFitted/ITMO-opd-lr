<div class="bloc l-bloc" id="bloc-13">
	<div class="container bloc-lg">
		<div class="row">
			<div class="col text-center">
				<div class="text-lg-center container-div-style">
					<h3 class="mb-4 section-heading primary-text">
						Список критериев
					</h3>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="bloc l-bloc" id="bloc-1">
	<div class="container bloc-lg">
		<div class="row">
			<div class="col">
				<div class="blocs-grid-container">
					{{#each criteria}}
					<div>
						<label id="criteria-label-{{this.criteria_id}}" class="form-label text-start">
							{{this.criteria_fields.name_criteria}}
						</label>
					</div>
					<div class="text-lg-end">
						<button id="del-button-{{this.criteria_id}}" class="btn btn-d btn-lg">Удалить</button>
					</div>
					{{/each}}
				</div>
				<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#criteriaModal">Добавить критерий</button>
			</div>
		</div>
	</div>
</div>

<div class="bloc l-bloc" id="bloc-2">
	<div class="container bloc-lg">
		<div class="row">
			<div class="col text-start">
				<div class="form-group mb-8">
					<div id="criteriaModal" class="modal modal-xl fade" tabindex="-1" role="dialog">
						<div class="modal-dialog modal-dialog-centered" role="document">
							<div class="modal-content">
								<div class="modal-header">
									<h3 class="mg-clear primary-text box-heading">
										Добавить критерии
									</h3>
								</div>
								<form method="POST" action="/user/add-criteria/">
									<div class="modal-body">
										<div class="row">
											<div class="row">
												<div class="row">
													<div class="col form-group mb-3">
														<label class="form-label">Название критерия</label>
														<input id="name_criteria" name="name_criteria" class="form-control" required="">
													</div>
												</div>
												<div class="row">
													<label class="form-label">Номер лабораторной</label>
													<div class="dropdown">
														<button class="btn btn-secondary dropdown-toggle" type="button" id="labButton" data-bs-toggle="dropdown" aria-expanded="false">
															Выбрать лабораторную
														</button>
														<ul class="dropdown-menu" id="lab-menu" aria-labelledby="labButton">
															<li><a class="dropdown-item" href="#">2</a></li>
															<li><a class="dropdown-item" href="#">3</a></li>
															<li><a class="dropdown-item" href="#">4</a></li>
															<li><a class="dropdown-item" href="#">5</a></li>
															<li><a class="dropdown-item" href="#">6</a></li>
															<li><a class="dropdown-item" href="#">7</a></li>
															<li><a class="dropdown-item" href="#">8</a></li>
														</ul>
													</div>
												</div>
												<div class="row">
													<label class="form-label">Номер теста</label>
													<div class="dropdown">
														<button class="btn btn-secondary dropdown-toggle" type="button" id="testButton" data-bs-toggle="dropdown" aria-expanded="false">
															Выбрать тест
														</button>
														<ul class="dropdown-menu" id="test-menu" aria-labelledby="testButton">
														</ul>
													</div>
												</div>
											</div>

											<input type="hidden" id="labSelection" name="labSelection" value="">
											<input type="hidden" id="testSelection" name="testSelection" value="">

											<div class="row" id="params-row" style="--bs-gutter-y: 1rem"></div>
										</div>
									</div>
									<div class="modal-footer">
										<button data-bs-toggle="modal" data-bs-target="#criteriaModal" class="btn btn-d btn-lg primary-btn box-btn fill-mob-btn">Закрыть<br></button>
										<button type="submit" class="btn btn-d btn-lg primary-btn box-btn fill-mob-btn">Сохранить</button>
									</div>
								</form>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	let testNum;
	const labDropdownItems = document.querySelectorAll('#lab-menu .dropdown-item');
	const labButton = document.querySelector('#labButton');
	const testButton = document.querySelector('#testButton');
	const labSelection = document.querySelector('#labSelection');
	const testSelection = document.querySelector('#testSelection');

	labDropdownItems.forEach(item => {
		item.addEventListener('click', event => {
			event.preventDefault();
			let selection = event.target.textContent;
			labButton.textContent = selection;
			labSelection.value = selection;
		});
	});

	document.querySelectorAll('#lab-menu a').forEach(item => {
		item.addEventListener('click', function (event) {
			event.preventDefault();

			const selectedOption = this.innerText;
			testNum = selectedOption;

			let testDropdownMenu = document.querySelector('#testButton ~ .dropdown-menu');
			testDropdownMenu.innerHTML = '';

			let paramsRow = document.querySelector('#params-row');
			paramsRow.innerHTML = '';
			testButton.innerHTML = 'Выбрать тест';

			fetch(`/user/choose-criteria/${selectedOption}`, {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json'
				},
			}).then(response => response.json())
				.then(labConfigData => {
					labConfigData.tests.forEach(option => {
						let test_num = option.test_num;
						let newOption = document.createElement('li');
						newOption.innerHTML = `<a class="dropdown-item" href="#">${test_num}</a>`;
						testDropdownMenu.appendChild(newOption);
					});

					const testDropdownItems = document.querySelectorAll('#test-menu .dropdown-item');

					testDropdownItems.forEach(item => {
						item.addEventListener('click', event => {
							event.preventDefault();
							let selection = event.target.textContent;
							testButton.textContent = selection;
							testSelection.value = selection;
						});
					});

					document.querySelectorAll('#test-menu a').forEach(item => {
						item.addEventListener('click', function (event) {
							event.preventDefault();

							const selectedOption = this.innerText;
							paramsRow.innerHTML = '';

							fetch(`/user/choose-criteria/${testNum}/${selectedOption}`, {
								method: 'GET',
								headers: {
									'Content-Type': 'application/json'
								},
							}).then(response => response.json())
								.then(testConfigData => {
									testConfigData.params.forEach((param, index) => {
										let newFieldsContainer = document.createElement('div');
										newFieldsContainer.className = 'row';

										let newParamLabelDiv = document.createElement('div');
										newParamLabelDiv.className = 'col-md-3 form-group mb-3';

										let newParamLabel = document.createElement('label');
										newParamLabel.className = 'form-label';
										newParamLabel.innerText = param.param_name;

										let newParamInput = document.createElement('input');
										newParamInput.id = `parameter${index + 1}_criteria`;
										newParamInput.name = `parameter${index + 1}_criteria`;
										newParamInput.className = 'form-control';
										newParamInput.readOnly = true;
										newParamInput.value = param.param_name;

										newParamLabelDiv.appendChild(newParamLabel);
										newParamLabelDiv.appendChild(newParamInput);
										newFieldsContainer.appendChild(newParamLabelDiv);

										let weightDiv = document.createElement('div');
										weightDiv.className = 'col-md-3 form-group mb-3';
										weightDiv.innerHTML = `
                                            <label class="form-label">Вес ${index + 1}</label>
                                            <input id="weight_param${index + 1}_criteria" name="weight_param${index + 1}_criteria" class="form-control" type="number" required="">`;
										newFieldsContainer.appendChild(weightDiv);

										let directionDropdownId = `direction${index + 1}Dropdown`;
										let directionHiddenInputId = `${directionDropdownId}Hidden`;

										let directionDiv = document.createElement('div');
										directionDiv.className = 'col-md-3 form-group mb-3';
										directionDiv.innerHTML = `
											<label class="form-label">Направление ${index + 1}</label>
											<input name="${directionHiddenInputId}" id="${directionHiddenInputId}" type="hidden" value="">
											<div class="dropdown">
												<button class="btn btn-secondary dropdown-toggle" type="button" id="${directionDropdownId}" data-bs-toggle="dropdown" aria-expanded="false">
													Выбрать направление
												</button>
												<ul class="dropdown-menu" aria-labelledby="${directionDropdownId}">
													<li><a class="dropdown-item" href="#">Больше - лучше</a></li>
													<li><a class="dropdown-item" href="#">Меньше - лучше</a></li>
												</ul>
											</div>`;
										newFieldsContainer.appendChild(directionDiv);

										let directionDropdownButton = directionDiv.querySelector(`#${directionDropdownId}`);
										let directionHiddenInput = directionDiv.querySelector(`#${directionHiddenInputId}`);

										directionDiv.querySelectorAll('.dropdown-item').forEach(item => {
											item.addEventListener('click', function (event) {
												event.preventDefault();

												let selectedOption = this.innerText;
												directionDropdownButton.innerText = selectedOption;
												directionHiddenInput.value = selectedOption;
											});
										});

										let sliceDiv = document.createElement('div');
										sliceDiv.className = 'col-md-3 form-group mb-3';
										sliceDiv.innerHTML = `
											<label class="form-label">Срез ${index + 1}</label>
											<input id="slice${index + 1}_criteria" name="slice${index + 1}_criteria" class="form-control" type="range" min="${param.slice_range[0]}" max="${param.slice_range[1]}" value="${param.slice_range[0]}" step="0.1" oninput="slice${index + 1}Output.value = this.value" required="">
											<output id="slice${index + 1}Output">${param.slice_range[0]}</output>`;
										newFieldsContainer.appendChild(sliceDiv);

										paramsRow.appendChild(newFieldsContainer);
									});
								})
								.catch(error => console.error('Error:', error));
						});
					});
				})
				.catch(error => console.error('Error:', error));
		})
	});
</script>